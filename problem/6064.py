import sys

# def gcd(a,b):
#     while b != 0:
#         a, b = b, a%b
#     return a

# def main():
#     t = int(sys.stdin.readline())

#     for _ in range(t):
#         n, m, x, y = map(int,sys.stdin.readline().split())
#         if n > m:
#             n, m = m, n
#             x, y = y, x
#         nm = m-n
#         xy = x-y
#         if (xy)%gcd(n,m) != 0:
#             print(-1)
#             continue
#         if nm == 0:
#             print(x)
#             continue
#         if xy<0:
#             xy += m
#         while xy%nm != 0:
#             print(xy, end=" -> ")
#             xy += m
#             print(xy)
#         print(xy//nm*n + x)

def extended_gcd(a,b):
    ## ax + by = gcd(a,b)
    #init, a>b
    x0, x1 = 1, 0
    y0, y1 = 0, 1

    while b != 0:
        q = a//b
        a, b = b, a%b
        x0, x1 = x1, x0-q*x1
        y0, y1 = y1, y0-q*y1
    
    # return gcd(a,b), x, y
    return a,x0,y0

def main():
    t = int(sys.stdin.readline())

    for _ in range(t):
        n, m, a, b = map(int,sys.stdin.readline().split())
        if n < m:
            n, m = m, n
            a, b = b, a

        ab = a-b
        gcd,x,_ = extended_gcd(n,m)
        nm = n*m
        gcm = nm//gcd
        if ab%gcd != 0:
            print(-1)
        else:
            ans = (a-ab//gcd*x*n)%gcm
            print(ans if ans else nm)


if __name__ == "__main__":
    main()


"""
3
10 12 9 3
10 12 2 12
12 10 9 3

15
3 5 1 1
3 5 2 2
3 5 3 3
3 5 1 4
3 5 2 5
3 5 3 1
3 5 1 2
3 5 2 3
3 5 3 4
3 5 1 5
3 5 2 1
3 5 3 2
3 5 1 3
3 5 2 4
3 5 3 5

10
2 5 1 1
2 5 2 2
2 5 1 3
2 5 2 4
2 5 1 5
2 5 2 1
2 5 1 2
2 5 2 3
2 5 1 4
2 5 2 5

18	
2 9 1 1
2 9 2 2
2 9 1 3
2 9 2 4
2 9 1 5
2 9 2 6
2 9 1 7
2 9 2 8
2 9 1 9
2 9 2 1
2 9 1 2
2 9 2 3
2 9 1 4
2 9 2 5
2 9 1 6
2 9 2 7
2 9 1 8
2 9 2 9


8	
1 8 1 1
1 8 1 2
1 8 1 3
1 8 1 4
1 8 1 5
1 8 1 6
1 8 1 7
1 8 1 8


143
13 11 1	1
13 11 2	2
13 11 3	3
13 11 4	4
13 11 5	5
13 11 6	6
13 11 7	7
13 11 8	8
13 11 9	9
13 11 10	10
13 11 11	11
13 11 12	1
13 11 13	2
13 11 1	3
13 11 2	4
13 11 3	5
13 11 4	6
13 11 5	7
13 11 6	8
13 11 7	9
13 11 8	10
13 11 9	11
13 11 10	1
13 11 11	2
13 11 12	3
13 11 13	4
13 11 1	5
13 11 2	6
13 11 3	7
13 11 4	8
13 11 5	9
13 11 6	10
13 11 7	11
13 11 8	1
13 11 9	2
13 11 10	3
13 11 11	4
13 11 12	5
13 11 13	6
13 11 1	7
13 11 2	8
13 11 3	9
13 11 4	10
13 11 5	11
13 11 6	1
13 11 7	2
13 11 8	3
13 11 9	4
13 11 10	5
13 11 11	6
13 11 12	7
13 11 13	8
13 11 1	9
13 11 2	10
13 11 3	11
13 11 4	1
13 11 5	2
13 11 6	3
13 11 7	4
13 11 8	5
13 11 9	6
13 11 10	7
13 11 11	8
13 11 12	9
13 11 13	10
13 11 1	11
13 11 2	1
13 11 3	2
13 11 4	3
13 11 5	4
13 11 6	5
13 11 7	6
13 11 8	7
13 11 9	8
13 11 10	9
13 11 11	10
13 11 12	11
13 11 13	1
13 11 1	2
13 11 2	3
13 11 3	4
13 11 4	5
13 11 5	6
13 11 6	7
13 11 7	8
13 11 8	9
13 11 9	10
13 11 10	11
13 11 11	1
13 11 12	2
13 11 13	3
13 11 1	4
13 11 2	5
13 11 3	6
13 11 4	7
13 11 5	8
13 11 6	9
13 11 7	10
13 11 8	11
13 11 9	1
13 11 10	2
13 11 11	3
13 11 12	4
13 11 13	5
13 11 1	6
13 11 2	7
13 11 3	8
13 11 4	9
13 11 5	10
13 11 6	11
13 11 7	1
13 11 8	2
13 11 9	3
13 11 10	4
13 11 11	5
13 11 12	6
13 11 13	7
13 11 1	8
13 11 2	9
13 11 3	10
13 11 4	11
13 11 5	1
13 11 6	2
13 11 7	3
13 11 8	4
13 11 9	5
13 11 10	6
13 11 11	7
13 11 12	8
13 11 13	9
13 11 1	10
13 11 2	11
13 11 3	1
13 11 4	2
13 11 5	3
13 11 6	4
13 11 7	5
13 11 8	6
13 11 9	7
13 11 10	8
13 11 11	9
13 11 12	10
13 11 13	11

"""